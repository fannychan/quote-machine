[{"/Users/fannychan/Projects/quote-inspiration-with-apollo/web/src/index.tsx":"1","/Users/fannychan/Projects/quote-inspiration-with-apollo/web/src/reportWebVitals.ts":"2","/Users/fannychan/Projects/quote-inspiration-with-apollo/web/src/App.tsx":"3","/Users/fannychan/Projects/quote-inspiration-with-apollo/web/src/client.tsx":"4","/Users/fannychan/Projects/quote-inspiration-with-apollo/web/src/views/Form.tsx":"5","/Users/fannychan/Projects/quote-inspiration-with-apollo/web/src/views/Login.tsx":"6","/Users/fannychan/Projects/quote-inspiration-with-apollo/web/src/views/Signup.tsx":"7","/Users/fannychan/Projects/quote-inspiration-with-apollo/web/src/views/Confirm.tsx":"8"},{"size":645,"mtime":1611824808841,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1611324437380,"results":"11","hashOfConfig":"10"},{"size":2807,"mtime":1611824828295,"results":"12","hashOfConfig":"10"},{"size":356,"mtime":1611324940468,"results":"13","hashOfConfig":"10"},{"size":2007,"mtime":1611663913639,"results":"14","hashOfConfig":"10"},{"size":1156,"mtime":1611824655384,"results":"15","hashOfConfig":"10"},{"size":1546,"mtime":1611761681173,"results":"16","hashOfConfig":"10"},{"size":1622,"mtime":1611763137172,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1io4qfu",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fannychan/Projects/quote-inspiration-with-apollo/web/src/index.tsx",[],["38","39"],"/Users/fannychan/Projects/quote-inspiration-with-apollo/web/src/reportWebVitals.ts",[],"/Users/fannychan/Projects/quote-inspiration-with-apollo/web/src/App.tsx",["40"],"import React, { useState } from \"react\";\nimport { gql, useLazyQuery } from \"@apollo/client\";\nimport styled from \"styled-components\";\nimport { Form } from \"./views/Form\";\nimport { Login } from \"./views/Login\";\nimport { Signup } from \"./views/Signup\";\nimport Amplify, { Auth } from \"aws-amplify\";\nimport { Confirm } from \"./views/Confirm\";\n\nconst awsConfig = {\n  aws_app_analytics: \"enable\",\n\n  aws_user_pools: \"enable\",\n  aws_user_pools_id: process.env.REACT_APP_COGNITO_USER_POOL_ID,\n  aws_user_pools_mfa_type: \"OFF\",\n  aws_user_pools_web_client_id: process.env.REACT_APP_COGNITO_CLIENT_ID,\n  aws_user_settings: \"enable\",\n};\n\nAmplify.configure(awsConfig);\n\nexport const StyledButton = styled.button`\n  border: none;\n  font-size: 16px;\n  padding: 8px 25px;\n  color: #635555;\n  margin-right: 10px;\n}\n`;\n\nconst Container = styled.div`\n  text-align: center;\n  margin-top: 100px;\n`;\n\nconst App = () => {\n  const GET_RANDOM_QUOTE = gql`\n    query GetRandomQuote {\n      random {\n        author\n        quote\n      }\n    }\n  `;\n\n  // const GET_QUOTE = gql`\n\n  // `\n\n  interface Quote {\n    author: string;\n    quote: string;\n  }\n\n  interface RandomQuote {\n    random: Quote;\n  }\n\n  const [getRandomQoute, { loading, data }] = useLazyQuery<RandomQuote>(\n    GET_RANDOM_QUOTE,\n    {\n      fetchPolicy: \"no-cache\",\n    }\n  );\n\n  const handleOnClick = () => {\n    setViewState(\"landing\");\n    getRandomQoute();\n  };\n\n  const [viewState, setViewState] = useState(\"landing\");\n  const [showLogin, setShowLogin] = useState(false);\n  const [signIn, setSignIn] = useState(false);\n  const [confirm, setConfirm] = useState(false);\n  return (\n    <>\n      {showLogin && <Login />}\n      {signIn && <Signup />}\n      {confirm && <Confirm />}\n      <StyledButton\n        style={{ marginTop: \"10px\" }}\n        onClick={() => setShowLogin(!showLogin)}\n      >\n        Login\n      </StyledButton>\n      <StyledButton\n        style={{ marginTop: \"10px\" }}\n        onClick={() => setSignIn(!signIn)}\n      >\n        Sign up\n      </StyledButton>\n      <StyledButton\n        style={{ marginTop: \"10px\" }}\n        onClick={() => setConfirm(!confirm)}\n      >\n        Confirm\n      </StyledButton>\n      <Container>\n        <div>\n          <StyledButton onClick={() => handleOnClick()}>\n            Get my qoute\n          </StyledButton>\n        </div>\n        {viewState === \"landing\" && (\n          <>\n            {loading && <p>Loading</p>}\n            {data && data.random && (\n              <>\n                <p style={{ fontSize: \"42px\" }}>&#10078;</p>\n                <h2>{data.random.quote}</h2>\n                <p>&#10077;</p>\n                <p>{data.random.author}</p>\n              </>\n            )}\n          </>\n        )}\n        {viewState === \"add\" && <Form />}\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","/Users/fannychan/Projects/quote-inspiration-with-apollo/web/src/client.tsx",[],"/Users/fannychan/Projects/quote-inspiration-with-apollo/web/src/views/Form.tsx",["41"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { StyledButton } from \"../App\";\ninterface Quote {\n  quote: string;\n  author: string;\n}\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n  margin-bottom: 10px;\n`;\n\nconst Input = styled.input`\n  padding: 8px;\n  width: 100%;\n  border: none;\n  line-height: 18px;\n  border-radius: 2px;\n}`;\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  min-height: 200px;\n`;\nconst ADD_QOUTE = gql`\n  mutation AddQoute($author: String!, $quote: String!) {\n    addQuote(author: $author, quote: $quote) {\n      quote\n      author\n    }\n  }\n`;\n\nexport const Form = () => {\n  const [addQuote, { data, error: mutationError }] = useMutation<{\n    addQuote: Quote;\n  }>(ADD_QOUTE);\n\n  const [formState, setForm] = useState({\n    author: \"\",\n    quote: \"\",\n  });\n  return (\n    <div\n      style={{ marginTop: \"10px\", display: \"flex\", justifyContent: \"center\" }}\n    >\n      <form\n        style={{ display: \"flex\", flexDirection: \"column\", width: \"350px\" }}\n        onSubmit={(e) => {\n          e.preventDefault();\n          addQuote({\n            variables: { quote: formState.quote, author: formState.author },\n          });\n          setForm({ author: \"\", quote: \"\" });\n        }}\n      >\n        <Label style={{ display: \"flex\", textAlign: \"left\" }}>\n          Author\n          <Input\n            value={formState.author}\n            onChange={(event) =>\n              setForm({ ...formState, author: event.target.value })\n            }\n          />\n        </Label>\n        <Label>\n          Quote\n          <TextArea\n            value={formState.quote}\n            onChange={(event) =>\n              setForm({ ...formState, quote: event.target.value })\n            }\n          />\n        </Label>\n        <StyledButton type=\"submit\">Add</StyledButton>\n        {mutationError && <p>Error :( Please try again</p>}\n      </form>\n    </div>\n  );\n};\n","/Users/fannychan/Projects/quote-inspiration-with-apollo/web/src/views/Login.tsx",[],"/Users/fannychan/Projects/quote-inspiration-with-apollo/web/src/views/Signup.tsx",["42"],"import react, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { StyledButton } from \"../App\";\n\nexport const Signup = () => {\n  const handleSignUp = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    try {\n      const { user } = await Auth.signUp({\n        username: formState.username,\n        password: formState.password,\n        attributes: {\n          email: formState.email, // optional\n        },\n      });\n      console.log(user);\n    } catch (error) {\n      console.log(\"error signing up:\", error);\n    }\n  };\n\n  const [formState, setFormState] = useState({\n    username: \"\",\n    password: \"\",\n    email: \"\",\n  });\n\n  return (\n    <div>\n      <form onSubmit={handleSignUp}>\n        <label>\n          Username\n          <input\n            value={formState.username}\n            onChange={(event) =>\n              setFormState({ ...formState, username: event.target.value })\n            }\n          />\n        </label>\n        <label>\n          Password\n          <input\n            value={formState.password}\n            onChange={(event) =>\n              setFormState({ ...formState, password: event.target.value })\n            }\n          />\n        </label>\n        <label>\n          Email\n          <input\n            value={formState.email}\n            onChange={(event) =>\n              setFormState({ ...formState, email: event.target.value })\n            }\n          />\n        </label>\n        <StyledButton type=\"submit\">Add</StyledButton>\n      </form>\n    </div>\n  );\n};\n","/Users/fannychan/Projects/quote-inspiration-with-apollo/web/src/views/Confirm.tsx",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":7,"column":19,"nodeType":"49","messageId":"50","endLine":7,"endColumn":23},{"ruleId":"47","severity":1,"message":"51","line":39,"column":22,"nodeType":"49","messageId":"50","endLine":39,"endColumn":26},{"ruleId":"47","severity":1,"message":"52","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":13},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"@typescript-eslint/no-unused-vars","'Auth' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'react' is defined but never used.","no-global-assign","no-unsafe-negation"]